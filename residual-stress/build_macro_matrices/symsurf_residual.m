function kes =symsurf_residual(nnps,nqpts,swt,bigNsurf,n,rjs,alpha)% computes surface forces for traction loading% Penalty parameter for free surface conditionpenalty_parm = alpha;iend=6*nnps;kes= zeros(iend,iend);% bigNsqppost = zeros(6,iend);% bigNsqppre = zeros(3,6*nnps);bigNsqp = zeros(6,iend);for j=1:1:nqpts  	    % Surface normals    n1=n(j,1);    n2=n(j,2);    n3=n(j,3);        % At each quad point (3x12)    bigNsqp(:,:) = bigNsurf(:,:,j);%    bigNsqppost(:,:) = bigNsurfpost(:,:,j);%     % At each quad point (3x12)%     bigNsqppre(:,:) = bigNsurfpre(:,:,j);        % Coefficient matrix for tractions (3x6)    B=[ n1 0 0 n2 n3 0;        0 n2 0 n1 0 n3;        0 0 n3 0 n1 n2];        % Coefficient matrix for in-plane tractions (3x3)    A=[ 1-(n1*n1) -n1*n2 -n1*n3;        -n2*n1 1-(n2*n2) -n2*n3;        -n3*n1 -n3*n2 1-(n3*n3)];        T=A*B;        % Constants (weight x jacobian)    xkfac=swt(j)*rjs(j);    % Stiffness at the quad point    kesqp = penalty_parm*xkfac*(bigNsqp'*T'*T*bigNsqp);        % Total stiffness    kes = kes + kesqp;end