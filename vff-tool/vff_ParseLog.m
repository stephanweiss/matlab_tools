% function log = vff_ParseLog(fileName)
% vff_ParseLog Parse a par file generated by vff macro.
%
%   log = vff_ParseLog(fileName) reads the vff par file
%   with the name fileName and returns the information in an array of
%   structures with fields:

%  nExpGvec = Number of expected G vectors
%         nMeasGvec = Number of measured G vectors
%         nMeasOnce = Number of G vectors measured once
%         nMeasMore = Number of G vectors measured more than once
%         meanIA = Average internal angle between prediced and measured
%         U = 3x3 Orientation matrix
%         gvec = G vector table
%         hkl = 3 hkl values

% # CLK 50MHz = 10                        S["0"] = 10.0000001
% # IC1-E = 951 (95.1/s)                  S["1"] = 951
% # IC2-E = 1048 (104.8/s)                S["2"] = 1048
% # IC3-E = 765 (76.5/s)                  S["3"] = 765
% # IC4-E = 994 (99.4/s)                  S["4"] = 994
% # IC5-E = 519 (51.9/s)                  S["5"] = 519
% # IC6-E = 739 (73.9/s)                  S["6"] = 739
% # IC7-E = 0 (0/s)                       S["7"] = 0
% # IC8-E = 59 (5.9/s)                    S["8"] = 59
% # ssd = 0 (0/s)                         S["9"] = 0
% # BeamPos-E-US = 0.133024 (0.0133024/s) S["10"] = 0.133023510372761
% # BeamPos-E-DS = 0.262831 (0.0262831/s) S["11"] = 0.26283105071252
% # LN2-Temp = 311.7 (31.17/s)            S["12"] = 311.7
% # IC1-B = 0 (0/s)                       S["13"] = 0
% # SRcurrent = 0 (0/s)                   S["14"] = 0
% # TempA = 24.28 (2.428/s)               S["15"] = 24.28
% # IC3-B = 0 (0/s)                       S["16"] = 0
% # IC5-B = 0 (0/s)                       S["17"] = 0
% # Federal = 0 (0/s)                     S["18"] = 0
% _uss_y = epics_get("1ide1:m17.VAL")
% _uss_x = epics_get("1ide1:m18.VAL")
% _uss_b = epics_get("1ide1:m20.VAL")
% _uss_t = epics_get("1ide1:m21.VAL")
% _uss_ob = epics_get("1ide1:m22.VAL")
% _uss_ib = epics_get("1ide1:m23.VAL")
% _dss_ib = epics_get("1ide1:m24.VAL")
% _dss_ob = epics_get("1ide1:m25.VAL")
% _dss_b = epics_get("1ide1:m26.VAL")
% _dss_t = epics_get("1ide1:m27.VAL")
% _aero_x = epics_get("1ide1:m13.VAL")
% _aero_z = epics_get("1ide1:m14.VAL")
% _aero_phi = epics_get("1ide:m9.VAL")
% _lns1_y = epics_get("1ide1:m28.VAL")
% _lns1_th = epics_get("1ide1:m30.VAL")
% _lns1_chi = epics_get("1ide1:m31.VAL")
% _lns2_y = epics_get("1ide1:m29.VAL")
% _lns2_th = epics_get("1ide1:m32.VAL")
% _lns2_chi = epics_get("1ide1:m33.VAL")
% _ge_x = epics_get("1ide1:m65.VAL")
% _vff_eta = epics_get("1ide1:m73.VAL")
% _vff_r = epics_get("1ide1:m74.VAL")
%
%   Example:
%     log = parseGrainSpotterLog('simul.log');

clear all
close all
clc

pname   = 'C:\Users\parkjs\Documents\Projects\VFF\park_may2013';
fname   = 'vff_test2.par';
pfname  = fullfile(pname, fname);

fid = fopen(pfname, 'r');
if(fid == -1)
    beep;
    error('Cannot open file:\n  %s\n', pfname);
end
% Get number of grains
line = fgetl(fid);
parms = sscanf(line, 'Found %i');
nGrains = parms;
textscan(fid, '%*[^\n]', 17); % Skip 22 lines
% Loop over found grains
log(nGrains) = struct('nExpGvec',[],'nMeasGvec',[],'nMeasOnce',[], ...
    'nMeasMore',[],'meanIA',[],'U',[],'Rod',[],'Bunge',[],'Quat',[],'refl',[]);
for i = 1:nGrains
    fgetl(fid);  % Grain nnn, nPairs (Skip)
    line    = fgetl(fid);
    parms   = sscanf(line, '%d %d %d %d');
    
    log(i).nExpGvec     = parms(1);
    log(i).nMeasGvec    = parms(2);
    log(i).nMeasOnce    = parms(3);
    log(i).nMeasMore    = parms(4);
    
    line    = fgetl(fid);
    parms   = sscanf(line, '%f');  % May be more items with 0.5 and above
    
    log(i).meanIA = parms(1);
    
    C           = textscan(fid, '%f', 9);
    log(i).U    = reshape(C{1}(1:9), 3, 3)';
    
    % Skip 3 lines
    textscan(fid, '%*[^\n]', 3);
    C   = textscan(fid, '%f', 3);
    log(i).Rod  = reshape(C{1}(1:3),3,1);
    
    % Skip 1 line
    % textscan(fid, '%*[^\n]', 1)
    C               = textscan(fid, '%f', 3);
    log(i).Bunge    = reshape(C{1}(1:3),3,1);
    
    C           = textscan(fid, '%f', 4);
    log(i).Quat = reshape(C{1}(1:4),4,1);
    
    % gvec is the whole 22 x nMeasGvec array of columns
    C           = textscan(fid, '%f', 22*log(i).nMeasGvec);
    log(i).refl = reshape(C{1},22,log(i).nMeasGvec)';
    textscan(fid, '%*[^\n]', 1); % Skip 1 lines
end
fclose(fid);
